/*
 * hoffmansubsystem.cpp
 *
 * Academic License - for use in teaching, academic research, and meeting
 * course requirements at degree granting institutions only.  Not for
 * government, commercial, or other organizational use.
 *
 * Code generation for model "hoffmansubsystem".
 *
 * Model version              : 1.478
 * Simulink Coder version : 8.12 (R2017a) 16-Feb-2017
 * C++ source code generated on : Wed May 16 21:11:53 2018
 *
 * Target selection: ert.tlc
 * Note: GRT includes extra infrastructure and instrumentation for prototyping
 * Embedded hardware selection: Generic->Unspecified (assume 32-bit Generic)
 * Code generation objectives: Unspecified
 * Validation result: Not run
 */

#include "hoffmansubsystem.h"
#include "hoffmansubsystem_private.h"
#define hoffmansubsyste_MessageQueueLen (1L)

/* Block signals (auto storage) */
B_hoffmansubsystem_T hoffmansubsystem_B;

/* Block states (auto storage) */
DW_hoffmansubsystem_T hoffmansubsystem_DW;

/* Real-time model */
RT_MODEL_hoffmansubsystem_T hoffmansubsystem_M_;
RT_MODEL_hoffmansubsystem_T *const hoffmansubsystem_M = &hoffmansubsystem_M_;
real_T rt_atan2d_snf(real_T u0, real_T u1)
{
  real_T y;
  int16_T u0_0;
  int16_T u1_0;
  if (rtIsNaN(u0) || rtIsNaN(u1)) {
    y = (rtNaN);
  } else if (rtIsInf(u0) && rtIsInf(u1)) {
    if (u0 > 0.0) {
      u0_0 = 1;
    } else {
      u0_0 = -1;
    }

    if (u1 > 0.0) {
      u1_0 = 1;
    } else {
      u1_0 = -1;
    }

    y = atan2((real_T)u0_0, (real_T)u1_0);
  } else if (u1 == 0.0) {
    if (u0 > 0.0) {
      y = RT_PI / 2.0;
    } else if (u0 < 0.0) {
      y = -(RT_PI / 2.0);
    } else {
      y = 0.0;
    }
  } else {
    y = atan2(u0, u1);
  }

  return y;
}

/* Model step function */
void hoffmansubsystem_step(void)
{
  /* local block i/o variables */
  real_T rtb_Sum;
  real_T rtb_e;
  static const creal_T b[301] = { { -1.0,/* re */
      -1.2246467991473532E-16          /* im */
    }, { -0.9997806834748455,          /* re */
      -0.02094241988335711             /* im */
    }, { -0.99912283009885838,         /* re */
      -0.04187565372919981             /* im */
    }, { -0.99802672842827156,         /* re */
      -0.062790519529313582            /* im */
    }, { -0.99649285924950437,         /* re */
      -0.083677843332315732            /* im */
    }, { -0.99452189536827329,         /* re */
      -0.10452846326765373             /* im */
    }, { -0.99211470131447776,         /* re */
      -0.12533323356430454             /* im */
    }, { -0.98927233296298833,         /* re */
      -0.14608302856241151             /* im */
    }, { -0.985996037070505,           /* re */
      -0.16676874671610217             /* im */
    }, { -0.98228725072868872,         /* re */
      -0.18738131458572457             /* im */
    }, { -0.97814760073380569,         /* re */
      -0.20791169081775931             /* im */
    }, { -0.97357890287316029,         /* re */
      -0.22835087011065575             /* im */
    }, { -0.96858316112863108,         /* re */
      -0.24868988716485482             /* im */
    }, { -0.9631625667976581,          /* re */
      -0.26891982061526576             /* im */
    }, { -0.95731949753206724,         /* re */
      -0.28903179694447168             /* im */
    }, { -0.95105651629515353,         /* re */
      -0.30901699437494751             /* im */
    }, { -0.944376370237481,           /* re */
      -0.3288666467385834              /* im */
    }, { -0.93728198949189145,         /* re */
      -0.34857204732181535             /* im */
    }, { -0.92977648588825135,         /* re */
      -0.36812455268467814             /* im */
    }, { -0.92186315158850041,         /* re */
      -0.38751558645210316             /* im */
    }, { -0.91354545764260076,         /* re */
      -0.40673664307580043             /* im */
    }, { -0.90482705246601935,         /* re */
      -0.42577929156507288             /* im */
    }, { -0.8957117602394129,          /* re */
      -0.44463517918492734             /* im */
    }, { -0.88620357923121473,         /* re */
      -0.46329603511986162             /* im */
    }, { -0.87630668004386358,         /* re */
      -0.48175367410171521             /* im */
    }, { -0.86602540378443871,         /* re */
      -0.49999999999999994             /* im */
    }, { -0.8553642601605066,          /* re */
      -0.51802700937313018             /* im */
    }, { -0.84432792550201508,         /* re */
      -0.53582679497899666             /* im */
    }, { -0.83292124071009943,         /* re */
      -0.55339154924334411             /* im */
    }, { -0.821149209133704,           /* re */
      -0.57071356768443171             /* im */
    }, { -0.80901699437494734,         /* re */
      -0.58778525229247325             /* im */
    }, { -0.79652991802419615,         /* re */
      -0.60459911486237494             /* im */
    }, { -0.78369345732583973,         /* re */
      -0.62114778027831052             /* im */
    }, { -0.77051324277578914,         /* re */
      -0.63742398974868986             /* im */
    }, { -0.75699505565175629,         /* re */
      -0.6534206039901056              /* im */
    }, { -0.74314482547739436,         /* re */
      -0.669130606358858               /* im */
    }, { -0.72896862742141133,         /* re */
      -0.68454710592868884             /* im */
    }, { -0.71447267963280348,         /* re */
      -0.69966334051336532             /* im */
    }, { -0.69966334051336543,         /* re */
      -0.71447267963280336             /* im */
    }, { -0.68454710592868873,         /* re */
      -0.72896862742141144             /* im */
    }, { -0.66913060635885824,         /* re */
      -0.74314482547739424             /* im */
    }, { -0.65342060399010549,         /* re */
      -0.7569950556517564              /* im */
    }, { -0.63742398974868975,         /* re */
      -0.77051324277578925             /* im */
    }, { -0.6211477802783103,          /* re */
      -0.78369345732583984             /* im */
    }, { -0.60459911486237483,         /* re */
      -0.79652991802419637             /* im */
    }, { -0.587785252292473,           /* re */
      -0.80901699437494745             /* im */
    }, { -0.5707135676844316,          /* re */
      -0.821149209133704               /* im */
    }, { -0.553391549243344,           /* re */
      -0.83292124071009954             /* im */
    }, { -0.53582679497899688,         /* re */
      -0.844327925502015               /* im */
    }, { -0.51802700937313007,         /* re */
      -0.85536426016050671             /* im */
    }, { -0.50000000000000022,         /* re */
      -0.8660254037844386              /* im */
    }, { -0.48175367410171505,         /* re */
      -0.87630668004386369             /* im */
    }, { -0.46329603511986189,         /* re */
      -0.88620357923121462             /* im */
    }, { -0.44463517918492723,         /* re */
      -0.895711760239413               /* im */
    }, { -0.42577929156507272,         /* re */
      -0.90482705246601947             /* im */
    }, { -0.40673664307580026,         /* re */
      -0.91354545764260087             /* im */
    }, { -0.387515586452103,           /* re */
      -0.92186315158850052             /* im */
    }, { -0.368124552684678,           /* re */
      -0.92977648588825146             /* im */
    }, { -0.34857204732181518,         /* re */
      -0.93728198949189157             /* im */
    }, { -0.32886664673858318,         /* re */
      -0.94437637023748111             /* im */
    }, { -0.30901699437494734,         /* re */
      -0.95105651629515364             /* im */
    }, { -0.28903179694447173,         /* re */
      -0.95731949753206724             /* im */
    }, { -0.26891982061526581,         /* re */
      -0.9631625667976581              /* im */
    }, { -0.24868988716485485,         /* re */
      -0.96858316112863108             /* im */
    }, { -0.22835087011065577,         /* re */
      -0.97357890287316029             /* im */
    }, { -0.20791169081775934,         /* re */
      -0.97814760073380569             /* im */
    }, { -0.1873813145857246,          /* re */
      -0.98228725072868872             /* im */
    }, { -0.16676874671610223,         /* re */
      -0.985996037070505               /* im */
    }, { -0.14608302856241176,         /* re */
      -0.98927233296298833             /* im */
    }, { -0.12533323356430437,         /* re */
      -0.99211470131447776             /* im */
    }, { -0.10452846326765355,         /* re */
      -0.99452189536827329             /* im */
    }, { -0.083677843332315552,        /* re */
      -0.99649285924950437             /* im */
    }, { -0.0627905195293134,          /* re */
      -0.99802672842827156             /* im */
    }, { -0.041875653729199623,        /* re */
      -0.99912283009885838             /* im */
    }, { -0.020942419883356926,        /* re */
      -0.9997806834748455              /* im */
    }, { -1.6081226496766366E-16,      /* re */
      -1.0                             /* im */
    }, { 0.020942419883356829,         /* re */
      -0.9997806834748455              /* im */
    }, { 0.041875653729199526,         /* re */
      -0.99912283009885838             /* im */
    }, { 0.0627905195293133,           /* re */
      -0.99802672842827156             /* im */
    }, { 0.083677843332315441,         /* re */
      -0.99649285924950437             /* im */
    }, { 0.10452846326765346,          /* re */
      -0.99452189536827329             /* im */
    }, { 0.12533323356430426,          /* re */
      -0.99211470131447788             /* im */
    }, { 0.14608302856241143,          /* re */
      -0.98927233296298833             /* im */
    }, { 0.16676874671610212,          /* re */
      -0.985996037070505               /* im */
    }, { 0.18738131458572452,          /* re */
      -0.98228725072868872             /* im */
    }, { 0.20791169081775923,          /* re */
      -0.97814760073380569             /* im */
    }, { 0.22835087011065569,          /* re */
      -0.97357890287316029             /* im */
    }, { 0.24868988716485474,          /* re */
      -0.96858316112863108             /* im */
    }, { 0.2689198206152657,           /* re */
      -0.96316256679765822             /* im */
    }, { 0.2890317969444714,           /* re */
      -0.95731949753206735             /* im */
    }, { 0.30901699437494728,          /* re */
      -0.95105651629515364             /* im */
    }, { 0.32886664673858312,          /* re */
      -0.94437637023748111             /* im */
    }, { 0.34857204732181513,          /* re */
      -0.93728198949189157             /* im */
    }, { 0.36812455268467786,          /* re */
      -0.92977648588825146             /* im */
    }, { 0.38751558645210293,          /* re */
      -0.92186315158850052             /* im */
    }, { 0.40673664307580021,          /* re */
      -0.91354545764260087             /* im */
    }, { 0.42577929156507244,          /* re */
      -0.90482705246601958             /* im */
    }, { 0.44463517918492734,          /* re */
      -0.8957117602394129              /* im */
    }, { 0.46329603511986162,          /* re */
      -0.88620357923121473             /* im */
    }, { 0.48175367410171516,          /* re */
      -0.87630668004386369             /* im */
    }, { 0.49999999999999989,          /* re */
      -0.86602540378443871             /* im */
    }, { 0.51802700937313018,          /* re */
      -0.85536426016050671             /* im */
    }, { 0.53582679497899655,          /* re */
      -0.84432792550201508             /* im */
    }, { 0.55339154924334411,          /* re */
      -0.83292124071009954             /* im */
    }, { 0.57071356768443171,          /* re */
      -0.821149209133704               /* im */
    }, { 0.58778525229247314,          /* re */
      -0.80901699437494745             /* im */
    }, { 0.60459911486237494,          /* re */
      -0.79652991802419626             /* im */
    }, { 0.62114778027831008,          /* re */
      -0.78369345732584006             /* im */
    }, { 0.63742398974868941,          /* re */
      -0.77051324277578948             /* im */
    }, { 0.65342060399010526,          /* re */
      -0.75699505565175662             /* im */
    }, { 0.669130606358858,            /* re */
      -0.74314482547739436             /* im */
    }, { 0.6845471059286885,           /* re */
      -0.72896862742141177             /* im */
    }, { 0.69966334051336532,          /* re */
      -0.71447267963280359             /* im */
    }, { 0.71447267963280325,          /* re */
      -0.69966334051336554             /* im */
    }, { 0.72896862742141144,          /* re */
      -0.68454710592868873             /* im */
    }, { 0.74314482547739413,          /* re */
      -0.66913060635885824             /* im */
    }, { 0.7569950556517564,           /* re */
      -0.65342060399010549             /* im */
    }, { 0.77051324277578914,          /* re */
      -0.63742398974868975             /* im */
    }, { 0.78369345732583984,          /* re */
      -0.62114778027831041             /* im */
    }, { 0.79652991802419626,          /* re */
      -0.60459911486237483             /* im */
    }, { 0.80901699437494745,          /* re */
      -0.58778525229247314             /* im */
    }, { 0.82114920913370382,          /* re */
      -0.570713567684432               /* im */
    }, { 0.83292124071009932,          /* re */
      -0.55339154924334433             /* im */
    }, { 0.84432792550201485,          /* re */
      -0.53582679497899688             /* im */
    }, { 0.85536426016050648,          /* re */
      -0.51802700937313051             /* im */
    }, { 0.86602540378443849,          /* re */
      -0.50000000000000022             /* im */
    }, { 0.87630668004386347,          /* re */
      -0.48175367410171549             /* im */
    }, { 0.88620357923121462,          /* re */
      -0.46329603511986195             /* im */
    }, { 0.89571176023941279,          /* re */
      -0.44463517918492768             /* im */
    }, { 0.90482705246601947,          /* re */
      -0.42577929156507277             /* im */
    }, { 0.91354545764260087,          /* re */
      -0.40673664307580032             /* im */
    }, { 0.92186315158850052,          /* re */
      -0.38751558645210304             /* im */
    }, { 0.92977648588825135,          /* re */
      -0.36812455268467803             /* im */
    }, { 0.93728198949189145,          /* re */
      -0.34857204732181524             /* im */
    }, { 0.944376370237481,            /* re */
      -0.32886664673858323             /* im */
    }, { 0.95105651629515353,          /* re */
      -0.3090169943749474              /* im */
    }, { 0.95731949753206713,          /* re */
      -0.28903179694447195             /* im */
    }, { 0.9631625667976581,           /* re */
      -0.26891982061526609             /* im */
    }, { 0.96858316112863108,          /* re */
      -0.24868988716485513             /* im */
    }, { 0.97357890287316018,          /* re */
      -0.22835087011065605             /* im */
    }, { 0.97814760073380558,          /* re */
      -0.20791169081775962             /* im */
    }, { 0.98228725072868861,          /* re */
      -0.18738131458572488             /* im */
    }, { 0.98599603707050487,          /* re */
      -0.16676874671610251             /* im */
    }, { 0.98927233296298833,          /* re */
      -0.14608302856241182             /* im */
    }, { 0.99211470131447776,          /* re */
      -0.12533323356430442             /* im */
    }, { 0.99452189536827329,          /* re */
      -0.10452846326765361             /* im */
    }, { 0.99649285924950437,          /* re */
      -0.083677843332315607            /* im */
    }, { 0.99802672842827156,          /* re */
      -0.062790519529313457            /* im */
    }, { 0.99912283009885838,          /* re */
      -0.041875653729199686            /* im */
    }, { 0.9997806834748455,           /* re */
      -0.020942419883356989            /* im */
    }, { 1.0,                          /* re */
      -4.4408920985006262E-16          /* im */
    }, { 0.9997806834748455,           /* re */
      0.020942419883356544             /* im */
    }, { 0.99912283009885838,          /* re */
      0.041875653729199241             /* im */
    }, { 0.99802672842827156,          /* re */
      0.062790519529313013             /* im */
    }, { 0.99649285924950437,          /* re */
      0.083677843332315163             /* im */
    }, { 0.9945218953682734,           /* re */
      0.10452846326765318              /* im */
    }, { 0.99211470131447788,          /* re */
      0.12533323356430398              /* im */
    }, { 0.98927233296298833,          /* re */
      0.14608302856241137              /* im */
    }, { 0.985996037070505,            /* re */
      0.16676874671610206              /* im */
    }, { 0.98228725072868872,          /* re */
      0.18738131458572446              /* im */
    }, { 0.97814760073380569,          /* re */
      0.20791169081775918              /* im */
    }, { 0.97357890287316029,          /* re */
      0.22835087011065561              /* im */
    }, { 0.96858316112863119,          /* re */
      0.24868988716485468              /* im */
    }, { 0.96316256679765822,          /* re */
      0.26891982061526565              /* im */
    }, { 0.95731949753206735,          /* re */
      0.28903179694447112              /* im */
    }, { 0.95105651629515375,          /* re */
      0.309016994374947                /* im */
    }, { 0.94437637023748122,          /* re */
      0.32886664673858285              /* im */
    }, { 0.93728198949189168,          /* re */
      0.34857204732181485              /* im */
    }, { 0.92977648588825157,          /* re */
      0.36812455268467759              /* im */
    }, { 0.92186315158850063,          /* re */
      0.38751558645210266              /* im */
    }, { 0.913545457642601,            /* re */
      0.40673664307579993              /* im */
    }, { 0.90482705246601969,          /* re */
      0.42577929156507238              /* im */
    }, { 0.895711760239413,            /* re */
      0.44463517918492723              /* im */
    }, { 0.88620357923121484,          /* re */
      0.4632960351198615               /* im */
    }, { 0.87630668004386369,          /* re */
      0.4817536741017151               /* im */
    }, { 0.86602540378443871,          /* re */
      0.49999999999999983              /* im */
    }, { 0.85536426016050671,          /* re */
      0.51802700937313007              /* im */
    }, { 0.84432792550201519,          /* re */
      0.53582679497899655              /* im */
    }, { 0.83292124071009976,          /* re */
      0.55339154924334366              /* im */
    }, { 0.82114920913370426,          /* re */
      0.57071356768443127              /* im */
    }, { 0.80901699437494767,          /* re */
      0.58778525229247269              /* im */
    }, { 0.79652991802419648,          /* re */
      0.6045991148623745               /* im */
    }, { 0.78369345732584006,          /* re */
      0.62114778027831008              /* im */
    }, { 0.77051324277578948,          /* re */
      0.63742398974868941              /* im */
    }, { 0.75699505565175662,          /* re */
      0.65342060399010515              /* im */
    }, { 0.74314482547739447,          /* re */
      0.669130606358858                /* im */
    }, { 0.72896862742141177,          /* re */
      0.6845471059286885               /* im */
    }, { 0.71447267963280359,          /* re */
      0.69966334051336521              /* im */
    }, { 0.69966334051336565,          /* re */
      0.71447267963280325              /* im */
    }, { 0.68454710592868884,          /* re */
      0.72896862742141144              /* im */
    }, { 0.66913060635885835,          /* re */
      0.74314482547739413              /* im */
    }, { 0.6534206039901056,           /* re */
      0.75699505565175629              /* im */
    }, { 0.63742398974869019,          /* re */
      0.77051324277578892              /* im */
    }, { 0.62114778027831041,          /* re */
      0.78369345732583973              /* im */
    }, { 0.60459911486237528,          /* re */
      0.796529918024196                /* im */
    }, { 0.58778525229247314,          /* re */
      0.80901699437494745              /* im */
    }, { 0.570713567684432,            /* re */
      0.82114920913370382              /* im */
    }, { 0.55339154924334411,          /* re */
      0.83292124071009954              /* im */
    }, { 0.535826794978997,            /* re */
      0.84432792550201485              /* im */
    }, { 0.51802700937313018,          /* re */
      0.85536426016050671              /* im */
    }, { 0.50000000000000033,          /* re */
      0.86602540378443849              /* im */
    }, { 0.48175367410171593,          /* re */
      0.87630668004386325              /* im */
    }, { 0.463296035119862,            /* re */
      0.88620357923121462              /* im */
    }, { 0.44463517918492812,          /* re */
      0.89571176023941257              /* im */
    }, { 0.42577929156507283,          /* re */
      0.90482705246601947              /* im */
    }, { 0.40673664307580076,          /* re */
      0.91354545764260064              /* im */
    }, { 0.3875155864521031,           /* re */
      0.92186315158850052              /* im */
    }, { 0.36812455268467847,          /* re */
      0.92977648588825124              /* im */
    }, { 0.34857204732181529,          /* re */
      0.93728198949189145              /* im */
    }, { 0.32886664673858373,          /* re */
      0.94437637023748089              /* im */
    }, { 0.30901699437494745,          /* re */
      0.95105651629515353              /* im */
    }, { 0.289031796944472,            /* re */
      0.95731949753206713              /* im */
    }, { 0.2689198206152657,           /* re */
      0.96316256679765822              /* im */
    }, { 0.24868988716485518,          /* re */
      0.96858316112863108              /* im */
    }, { 0.22835087011065655,          /* re */
      0.97357890287316007              /* im */
    }, { 0.20791169081775968,          /* re */
      0.97814760073380558              /* im */
    }, { 0.18738131458572538,          /* re */
      0.9822872507286885               /* im */
    }, { 0.16676874671610256,          /* re */
      0.98599603707050487              /* im */
    }, { 0.14608302856241231,          /* re */
      0.98927233296298822              /* im */
    }, { 0.12533323356430448,          /* re */
      0.99211470131447776              /* im */
    }, { 0.10452846326765412,          /* re */
      0.99452189536827329              /* im */
    }, { 0.083677843332315663,         /* re */
      0.99649285924950437              /* im */
    }, { 0.062790519529313971,         /* re */
      0.99802672842827156              /* im */
    }, { 0.041875653729199748,         /* re */
      0.99912283009885838              /* im */
    }, { 0.020942419883357495,         /* re */
      0.9997806834748455               /* im */
    }, { 6.123233995736766E-17,        /* re */
      1.0                              /* im */
    }, { -0.020942419883356482,        /* re */
      0.9997806834748455               /* im */
    }, { -0.041875653729199623,        /* re */
      0.99912283009885838              /* im */
    }, { -0.062790519529312958,        /* re */
      0.99802672842827156              /* im */
    }, { -0.083677843332314664,        /* re */
      0.99649285924950437              /* im */
    }, { -0.10452846326765311,         /* re */
      0.9945218953682734               /* im */
    }, { -0.12533323356430348,         /* re */
      0.99211470131447788              /* im */
    }, { -0.14608302856241132,         /* re */
      0.98927233296298833              /* im */
    }, { -0.16676874671610156,         /* re */
      0.98599603707050509              /* im */
    }, { -0.18738131458572438,         /* re */
      0.98228725072868872              /* im */
    }, { -0.2079116908177587,          /* re */
      0.9781476007338058               /* im */
    }, { -0.22835087011065555,         /* re */
      0.97357890287316029              /* im */
    }, { -0.24868988716485421,         /* re */
      0.9685831611286313               /* im */
    }, { -0.26891982061526559,         /* re */
      0.96316256679765822              /* im */
    }, { -0.28903179694447106,         /* re */
      0.95731949753206746              /* im */
    }, { -0.30901699437494734,         /* re */
      0.95105651629515364              /* im */
    }, { -0.32886664673858279,         /* re */
      0.94437637023748122              /* im */
    }, { -0.34857204732181435,         /* re */
      0.93728198949189179              /* im */
    }, { -0.36812455268467759,         /* re */
      0.92977648588825157              /* im */
    }, { -0.38751558645210221,         /* re */
      0.92186315158850085              /* im */
    }, { -0.40673664307579988,         /* re */
      0.91354545764260109              /* im */
    }, { -0.42577929156507194,         /* re */
      0.90482705246601991              /* im */
    }, { -0.44463517918492723,         /* re */
      0.895711760239413                /* im */
    }, { -0.46329603511986106,         /* re */
      0.88620357923121507              /* im */
    }, { -0.48175367410171505,         /* re */
      0.87630668004386369              /* im */
    }, { -0.49999999999999944,         /* re */
      0.866025403784439                /* im */
    }, { -0.51802700937313007,         /* re */
      0.85536426016050671              /* im */
    }, { -0.5358267949789961,          /* re */
      0.84432792550201541              /* im */
    }, { -0.553391549243344,           /* re */
      0.83292124071009954              /* im */
    }, { -0.57071356768443127,         /* re */
      0.82114920913370437              /* im */
    }, { -0.587785252292473,           /* re */
      0.80901699437494745              /* im */
    }, { -0.6045991148623745,          /* re */
      0.79652991802419659              /* im */
    }, { -0.62114778027830964,         /* re */
      0.78369345732584039              /* im */
    }, { -0.63742398974868941,         /* re */
      0.77051324277578948              /* im */
    }, { -0.65342060399010482,         /* re */
      0.756995055651757                /* im */
    }, { -0.6691306063588579,          /* re */
      0.74314482547739447              /* im */
    }, { -0.68454710592868806,         /* re */
      0.72896862742141211              /* im */
    }, { -0.69966334051336521,         /* re */
      0.71447267963280359              /* im */
    }, { -0.71447267963280281,         /* re */
      0.699663340513366                /* im */
    }, { -0.72896862742141133,         /* re */
      0.68454710592868884              /* im */
    }, { -0.7431448254773938,          /* re */
      0.66913060635885868              /* im */
    }, { -0.75699505565175629,         /* re */
      0.6534206039901056               /* im */
    }, { -0.77051324277578881,         /* re */
      0.63742398974869019              /* im */
    }, { -0.78369345732583973,         /* re */
      0.62114778027831052              /* im */
    }, { -0.79652991802419593,         /* re */
      0.60459911486237528              /* im */
    }, { -0.80901699437494734,         /* re */
      0.58778525229247325              /* im */
    }, { -0.82114920913370371,         /* re */
      0.57071356768443215              /* im */
    }, { -0.832921240710099,           /* re */
      0.55339154924334488              /* im */
    }, { -0.84432792550201485,         /* re */
      0.535826794978997                /* im */
    }, { -0.85536426016050615,         /* re */
      0.518027009373131                /* im */
    }, { -0.86602540378443849,         /* re */
      0.50000000000000033              /* im */
    }, { -0.87630668004386325,         /* re */
      0.481753674101716                /* im */
    }, { -0.88620357923121451,         /* re */
      0.46329603511986206              /* im */
    }, { -0.89571176023941257,         /* re */
      0.44463517918492818              /* im */
    }, { -0.90482705246601935,         /* re */
      0.42577929156507288              /* im */
    }, { -0.91354545764260064,         /* re */
      0.40673664307580082              /* im */
    }, { -0.92186315158850041,         /* re */
      0.38751558645210316              /* im */
    }, { -0.92977648588825113,         /* re */
      0.36812455268467853              /* im */
    }, { -0.93728198949189145,         /* re */
      0.34857204732181535              /* im */
    }, { -0.94437637023748089,         /* re */
      0.32886664673858379              /* im */
    }, { -0.95105651629515331,         /* re */
      0.30901699437494839              /* im */
    }, { -0.95731949753206713,         /* re */
      0.28903179694447212              /* im */
    }, { -0.96316256679765788,         /* re */
      0.26891982061526659              /* im */
    }, { -0.968583161128631,           /* re */
      0.24868988716485524              /* im */
    }, { -0.97357890287316007,         /* re */
      0.22835087011065661              /* im */
    }, { -0.97814760073380558,         /* re */
      0.20791169081775973              /* im */
    }, { -0.9822872507286885,          /* re */
      0.18738131458572543              /* im */
    }, { -0.98599603707050487,         /* re */
      0.16676874671610262              /* im */
    }, { -0.98927233296298822,         /* re */
      0.14608302856241237              /* im */
    }, { -0.99211470131447776,         /* re */
      0.12533323356430454              /* im */
    }, { -0.99452189536827329,         /* re */
      0.10452846326765418              /* im */
    }, { -0.99649285924950437,         /* re */
      0.083677843332315732             /* im */
    }, { -0.99802672842827156,         /* re */
      0.062790519529314026             /* im */
    }, { -0.99912283009885838,         /* re */
      0.04187565372919981              /* im */
    }, { -0.9997806834748455,          /* re */
      0.020942419883357554             /* im */
    }, { -1.0,                         /* re */
      1.2246467991473532E-16           /* im */
    } };

  int16_T b_index;
  boolean_T varargout_1;
  real_T rtb_q0;
  real_T rtb_fcn5;
  int16_T i;
  static const real_T tmp[301] = { -1.5707963267948966, -1.5498523757709646,
    -1.5289084247470326, -1.5079644737231006, -1.4870205226991686,
    -1.4660765716752366, -1.4451326206513047, -1.4241886696273731,
    -1.4032447186034411, -1.3823007675795091, -1.3613568165555772,
    -1.3404128655316452, -1.3194689145077132, -1.2985249634837812,
    -1.2775810124598492, -1.2566370614359172, -1.2356931104119853,
    -1.2147491593880533, -1.1938052083641213, -1.1728612573401893,
    -1.1519173063162573, -1.1309733552923253, -1.1100294042683938,
    -1.0890854532444618, -1.0681415022205298, -1.0471975511965979,
    -1.0262536001726659, -1.0053096491487339, -0.9843656981248019,
    -0.96342174710086992, -0.94247779607693793, -0.921533845053006,
    -0.900589894029074, -0.879645943005142, -0.85870199198121,
    -0.83775804095727846, -0.816814089933346, -0.79587013890941449,
    -0.77492618788548251, -0.75398223686155053, -0.73303828583761854,
    -0.71209433481368656, -0.69115038378975457, -0.67020643276582259,
    -0.64926248174189061, -0.62831853071795862, -0.60737457969402664,
    -0.58643062867009466, -0.56548667764616312, -0.54454272662223069,
    -0.52359877559829915, -0.50265482457436672, -0.48171087355043518,
    -0.46076692252650275, -0.43982297150257121, -0.41887902047863923,
    -0.39793506945470725, -0.37699111843077526, -0.35604716740684328,
    -0.3351032163829113, -0.31415926535897931, -0.29321531433504755,
    -0.27227136331111557, -0.25132741228718358, -0.2303834612632516,
    -0.20943951023931962, -0.18849555921538763, -0.16755160819145565,
    -0.14660765716752389, -0.1256637061435919, -0.10471975511965992,
    -0.083775804095727935, -0.062831853071795951, -0.041887902047863967,
    -0.020943951023931984, -2.2204460492503131E-16, 0.020943951023931762,
    0.041887902047863745, 0.062831853071795729, 0.083775804095727713,
    0.1047197551196597, 0.12566370614359168, 0.14660765716752344,
    0.16755160819145543, 0.18849555921538741, 0.20943951023931939,
    0.23038346126325138, 0.25132741228718336, 0.27227136331111534,
    0.29321531433504711, 0.31415926535897909, 0.33510321638291107,
    0.35604716740684306, 0.37699111843077504, 0.397935069454707,
    0.418879020478639, 0.43982297150257077, 0.46076692252650275,
    0.48171087355043474, 0.50265482457436672, 0.5235987755982987,
    0.54454272662223069, 0.56548667764616267, 0.58643062867009466,
    0.60737457969402664, 0.62831853071795862, 0.64926248174189061,
    0.67020643276582215, 0.69115038378975413, 0.71209433481368611,
    0.7330382858376181, 0.75398223686155008, 0.77492618788548207,
    0.795870138909414, 0.816814089933346, 0.837758040957278, 0.85870199198121,
    0.879645943005142, 0.900589894029074, 0.921533845053006, 0.94247779607693793,
    0.96342174710086947, 0.98436569812480146, 1.0053096491487334,
    1.0262536001726654, 1.0471975511965974, 1.0681415022205294,
    1.0890854532444614, 1.1100294042683934, 1.1309733552923253,
    1.1519173063162573, 1.1728612573401893, 1.1938052083641213,
    1.2147491593880533, 1.2356931104119853, 1.2566370614359172,
    1.2775810124598488, 1.2985249634837808, 1.3194689145077128,
    1.3404128655316447, 1.3613568165555767, 1.3823007675795087,
    1.4032447186034407, 1.4241886696273727, 1.4451326206513047,
    1.4660765716752366, 1.4870205226991686, 1.5079644737231006,
    1.5289084247470326, 1.5498523757709646, 1.5707963267948961,
    1.5917402778188281, 1.61268422884276, 1.6336281798666921, 1.654572130890624,
    1.675516081914556, 1.696460032938488, 1.71740398396242, 1.738347934986352,
    1.759291886010284, 1.780235837034216, 1.8011797880581479, 1.82212373908208,
    1.8430676901060119, 1.8640116411299434, 1.8849555921538754,
    1.9058995431778074, 1.9268434942017394, 1.9477874452256714,
    1.9687313962496034, 1.9896753472735353, 2.0106192982974673,
    2.0315632493213993, 2.0525072003453313, 2.0734511513692633,
    2.0943951023931953, 2.1153390534171272, 2.1362830044410592,
    2.1572269554649908, 2.1781709064889228, 2.1991148575128547,
    2.2200588085367867, 2.2410027595607187, 2.2619467105846507,
    2.2828906616085827, 2.3038346126325147, 2.3247785636564466,
    2.3457225146803786, 2.3666664657043106, 2.3876104167282426,
    2.4085543677521746, 2.4294983187761066, 2.4504422698000381,
    2.4713862208239705, 2.4923301718479021, 2.5132741228718345,
    2.534218073895766, 2.5551620249196985, 2.57610597594363, 2.5970499269675624,
    2.617993877991494, 2.6389378290154255, 2.6598817800393579,
    2.6808257310632895, 2.7017696820872219, 2.7227136331111534,
    2.7436575841350859, 2.7646015351590174, 2.78554548618295, 2.8064894372068814,
    2.8274333882308138, 2.8483773392547453, 2.8693212902786778,
    2.8902652413026093, 2.9112091923265409, 2.9321531433504733,
    2.9530970943744048, 2.9740410453983372, 2.9949849964222688,
    3.0159289474462012, 3.0368728984701328, 3.0578168494940652,
    3.0787608005179967, 3.0997047515419291, 3.1206487025658607,
    3.1415926535897931, 3.1625366046137247, 3.1834805556376571,
    3.2044245066615886, 3.22536845768552, 3.2463124087094526, 3.2672563597333841,
    3.2882003107573166, 3.3091442617812481, 3.3300882128051805,
    3.3510321638291121, 3.3719761148530445, 3.392920065876976,
    3.4138640169009085, 3.43480796792484, 3.4557519189487724, 3.476695869972704,
    3.4976398209966355, 3.5185837720205679, 3.5395277230444995,
    3.5604716740684319, 3.5814156250923634, 3.6023595761162959,
    3.6233035271402274, 3.64424747816416, 3.6651914291880914, 3.6861353802120238,
    3.7070793312359553, 3.7280232822598878, 3.7489672332838193,
    3.7699111843077517, 3.7908551353316833, 3.8117990863556148,
    3.8327430373795472, 3.8536869884034788, 3.8746309394274112,
    3.8955748904513428, 3.9165188414752752, 3.9374627924992067,
    3.9584067435231391, 3.9793506945470707, 4.0002946455710031,
    4.0212385965949347, 4.0421825476188671, 4.0631264986427986,
    4.0840704496667311, 4.1050144006906626, 4.1259583517145941,
    4.1469023027385266, 4.1678462537624581, 4.1887902047863905,
    4.2097341558103221, 4.2306781068342545, 4.251622057858186,
    4.2725660088821185, 4.29350995990605, 4.3144539109299824, 4.335397861953914,
    4.3563418129778464, 4.3772857640017779, 4.3982297150257095,
    4.4191736660496419, 4.4401176170735734, 4.4610615680975059,
    4.4820055191214374, 4.50294947014537, 4.5238934211693014, 4.5448373721932338,
    4.5657813232171653, 4.5867252742410978, 4.6076692252650293,
    4.6286131762889617, 4.6495571273128933, 4.6705010783368257,
    4.6914450293607572, 4.71238898038469 };

  real_T rtb_sincos_o1_idx_2;
  real_T rtb_sincos_o2_idx_1;

  /* Outputs for Atomic SubSystem: '<Root>/Subscribe3' */
  /* Start for MATLABSystem: '<S8>/SourceBlock' incorporates:
   *  Inport: '<S21>/In1'
   *  MATLABSystem: '<S8>/SourceBlock'
   */
  varargout_1 = Sub_hoffmansubsystem_102.getLatestMessage
    (&hoffmansubsystem_B.varargout_2);

  /* Outputs for Enabled SubSystem: '<S8>/Enabled Subsystem' incorporates:
   *  EnablePort: '<S21>/Enable'
   */
  if (varargout_1) {
    hoffmansubsystem_B.In1 = hoffmansubsystem_B.varargout_2;
  }

  /* End of Start for MATLABSystem: '<S8>/SourceBlock' */
  /* End of Outputs for SubSystem: '<S8>/Enabled Subsystem' */
  /* End of Outputs for SubSystem: '<Root>/Subscribe3' */

  /* MATLAB Function: '<S7>/circle centered' incorporates:
   *  Constant: '<S7>/radius'
   */
  /* MATLAB Function 'Select desired path/circle centered': '<S18>:1' */
  /* '<S18>:1:3' angles=linspace(-pi,pi,301); */
  /* '<S18>:1:4' r = radius*exp(angles*1j); */
  for (b_index = 0; b_index < 301; b_index++) {
    hoffmansubsystem_B.r[b_index].re = hoffmansubsystem_P.radius_Value *
      b[b_index].re;
    hoffmansubsystem_B.r[b_index].im = hoffmansubsystem_P.radius_Value *
      b[b_index].im;
  }

  /* MATLAB Function: '<S7>/straight line' incorporates:
   *  Constant: '<S7>/heading'
   *  Constant: '<S7>/len'
   */
  /* '<S18>:1:5' xs = real(r)-radius+start(1); */
  /* '<S18>:1:6' ys = imag(r)+start(2); */
  /* '<S18>:1:7' phis=(pi/2)+angles; */
  /*  % To visualize the angles, run this code: */
  /*  radius=3.6; start=[0 0]; */
  /*  angles=linspace(-pi,pi,300); */
  /*  r = radius*exp(angles*1j); */
  /*  xs = real(r)-radius+start(1); */
  /*  ys = imag(r)+start(2); */
  /*  % since the direction of travel is in the 'x' direction, the  */
  /*  % heading (phi) matchines the angle of the circle */
  /*  phis=(pi/2)+angles; */
  /*  xends=cos(phis);yends=sin(phis); */
  /*  figure;plot(xs,ys);hold on; quiver(xs,ys,xends,yends);axis equal;hold off */
  /* MATLAB Function 'Select desired path/straight line': '<S19>:1' */
  /* '<S19>:1:3' r = linspace(0,len,301); */
  hoffmansubsystem_B.ys[300] = hoffmansubsystem_P.len_Value;
  hoffmansubsystem_B.ys[0] = 0.0;
  if ((hoffmansubsystem_P.len_Value < 0.0) && (fabs(hoffmansubsystem_P.len_Value)
       > 8.9884656743115785E+307)) {
    hoffmansubsystem_B.delta1 = hoffmansubsystem_P.len_Value / 300.0;
    for (b_index = 0; b_index < 299; b_index++) {
      hoffmansubsystem_B.ys[b_index + 1] = (1.0 + (real_T)b_index) *
        hoffmansubsystem_B.delta1;
    }
  } else {
    hoffmansubsystem_B.delta1 = hoffmansubsystem_P.len_Value / 300.0;
    for (b_index = 0; b_index < 299; b_index++) {
      hoffmansubsystem_B.ys[b_index + 1] = (1.0 + (real_T)b_index) *
        hoffmansubsystem_B.delta1;
    }
  }

  /* '<S19>:1:4' xs = r*cos(heading); */
  hoffmansubsystem_B.delta1 = cos(hoffmansubsystem_P.heading_Value);
  for (i = 0; i < 301; i++) {
    hoffmansubsystem_B.xs[i] = hoffmansubsystem_B.ys[i] *
      hoffmansubsystem_B.delta1;
  }

  /* '<S19>:1:5' ys = r*sin(heading); */
  hoffmansubsystem_B.delta1 = sin(hoffmansubsystem_P.heading_Value);
  for (b_index = 0; b_index < 301; b_index++) {
    hoffmansubsystem_B.ys[b_index] *= hoffmansubsystem_B.delta1;
  }

  /* End of MATLAB Function: '<S7>/straight line' */

  /* MultiPortSwitch: '<S7>/Multiport Switch' incorporates:
   *  Constant: '<S7>/heading'
   *  Constant: '<S7>/pathChoice '
   *  Constant: '<S7>/radius'
   *  Constant: '<S7>/start point'
   *  MATLAB Function: '<S7>/circle centered'
   */
  /* '<S19>:1:6' phis = heading*ones(1,length(r)); */
  if ((int16_T)hoffmansubsystem_P.pathChoice_Value == 1) {
    for (b_index = 0; b_index < 301; b_index++) {
      hoffmansubsystem_B.MultiportSwitch[b_index] =
        (hoffmansubsystem_B.r[b_index].re - hoffmansubsystem_P.radius_Value) +
        hoffmansubsystem_P.startpoint_Value[0];
      hoffmansubsystem_B.MultiportSwitch[b_index + 301] =
        hoffmansubsystem_B.r[b_index].im + hoffmansubsystem_P.startpoint_Value[1];
      hoffmansubsystem_B.MultiportSwitch[b_index + 602] = tmp[b_index];
    }
  } else {
    for (i = 0; i < 301; i++) {
      hoffmansubsystem_B.MultiportSwitch[i] = hoffmansubsystem_B.xs[i];
      hoffmansubsystem_B.MultiportSwitch[i + 301] = hoffmansubsystem_B.ys[i];
      hoffmansubsystem_B.MultiportSwitch[i + 602] =
        hoffmansubsystem_P.heading_Value;
    }
  }

  /* End of MultiPortSwitch: '<S7>/Multiport Switch' */

  /* MATLAB Function: '<S4>/calculate e' */
  /* MATLAB Function 'Hoffmann Controller1/calculate e': '<S15>:1' */
  /* '<S15>:1:3' path=reshape(pathV,[],3); */
  /* '<S15>:1:4' x1 = path(1,1); */
  /* '<S15>:1:5' y1 = path(1,2); */
  /* '<S15>:1:6' phi1=path(1,3); */
  /* '<S15>:1:7' etmp = inf; */
  /* '<S15>:1:8' e = inf; */
  hoffmansubsystem_B.delta1 = (rtInf);

  /* '<S15>:1:9' index=1; */
  b_index = 0;

  /*  find the nearest x,y */
  /* '<S15>:1:11' for i=1:length(path) */
  for (i = 0; i < 301; i++) {
    /* '<S15>:1:12' etmp = sqrt((x-path(i,1))^2+(y-path(i,2))^2); */
    rtb_fcn5 = hoffmansubsystem_B.In1.Pose.Pose.Position.X -
      hoffmansubsystem_B.MultiportSwitch[i];
    rtb_q0 = hoffmansubsystem_B.In1.Pose.Pose.Position.Y -
      hoffmansubsystem_B.MultiportSwitch[301 + i];
    rtb_fcn5 = sqrt(rtb_fcn5 * rtb_fcn5 + rtb_q0 * rtb_q0);

    /* '<S15>:1:13' if( etmp < e ) */
    if (rtb_fcn5 < hoffmansubsystem_B.delta1) {
      /* '<S15>:1:14' e = etmp; */
      hoffmansubsystem_B.delta1 = rtb_fcn5;

      /* '<S15>:1:15' index=i; */
      b_index = i;
    }
  }

  /* '<S15>:1:19' xpathOut=path(index,1); */
  /* '<S15>:1:20' ypathOut=path(index,2); */
  /* '<S15>:1:21' phipath=path(index,3); */
  /* '<S15>:1:23' ex1 = (path(index,1)-x); */
  /* '<S15>:1:24' ey1 = (path(index,2)-y); */
  /* '<S15>:1:25' ex2 = cos(phipath); */
  /* '<S15>:1:26' ey2 = sin(phipath); */
  /* '<S15>:1:27' sinnnn = ex1*ey2-ey1*ex2; */
  /* '<S15>:1:28' e = sign(sinnnn)*e; */
  rtb_fcn5 = (hoffmansubsystem_B.MultiportSwitch[b_index] -
              hoffmansubsystem_B.In1.Pose.Pose.Position.X) * sin
    (hoffmansubsystem_B.MultiportSwitch[602 + b_index]) -
    (hoffmansubsystem_B.MultiportSwitch[301 + b_index] -
     hoffmansubsystem_B.In1.Pose.Pose.Position.Y) * cos
    (hoffmansubsystem_B.MultiportSwitch[602 + b_index]);
  if (rtb_fcn5 < 0.0) {
    rtb_fcn5 = -1.0;
  } else if (rtb_fcn5 > 0.0) {
    rtb_fcn5 = 1.0;
  } else {
    if (rtb_fcn5 == 0.0) {
      rtb_fcn5 = 0.0;
    }
  }

  rtb_e = rtb_fcn5 * hoffmansubsystem_B.delta1;

  /* Outputs for Atomic SubSystem: '<Root>/Velocity from control block ' */
  /* Start for MATLABSystem: '<S9>/SourceBlock' incorporates:
   *  Inport: '<S22>/In1'
   *  MATLABSystem: '<S9>/SourceBlock'
   */
  varargout_1 = Sub_hoffmansubsystem_150.getLatestMessage
    (&hoffmansubsystem_B.BusAssignment1);

  /* Outputs for Enabled SubSystem: '<S9>/Enabled Subsystem' incorporates:
   *  EnablePort: '<S22>/Enable'
   */
  if (varargout_1) {
    hoffmansubsystem_B.In1_k = hoffmansubsystem_B.BusAssignment1;
  }

  /* End of Start for MATLABSystem: '<S9>/SourceBlock' */
  /* End of Outputs for SubSystem: '<S9>/Enabled Subsystem' */
  /* End of Outputs for SubSystem: '<Root>/Velocity from control block ' */

  /* Sqrt: '<S25>/sqrt' incorporates:
   *  Product: '<S26>/Product'
   *  Product: '<S26>/Product1'
   *  Product: '<S26>/Product2'
   *  Product: '<S26>/Product3'
   *  Sum: '<S26>/Sum'
   */
  hoffmansubsystem_B.delta1 = sqrt
    (((hoffmansubsystem_B.In1.Pose.Pose.Orientation.W *
       hoffmansubsystem_B.In1.Pose.Pose.Orientation.W +
       hoffmansubsystem_B.In1.Pose.Pose.Orientation.X *
       hoffmansubsystem_B.In1.Pose.Pose.Orientation.X) +
      hoffmansubsystem_B.In1.Pose.Pose.Orientation.Y *
      hoffmansubsystem_B.In1.Pose.Pose.Orientation.Y) +
     hoffmansubsystem_B.In1.Pose.Pose.Orientation.Z *
     hoffmansubsystem_B.In1.Pose.Pose.Orientation.Z);

  /* Product: '<S24>/Product' */
  rtb_fcn5 = hoffmansubsystem_B.In1.Pose.Pose.Orientation.W /
    hoffmansubsystem_B.delta1;

  /* Product: '<S24>/Product1' */
  rtb_q0 = hoffmansubsystem_B.In1.Pose.Pose.Orientation.X /
    hoffmansubsystem_B.delta1;

  /* Product: '<S24>/Product2' */
  hoffmansubsystem_B.q3 = hoffmansubsystem_B.In1.Pose.Pose.Orientation.Y /
    hoffmansubsystem_B.delta1;

  /* Product: '<S24>/Product3' */
  hoffmansubsystem_B.delta1 = hoffmansubsystem_B.In1.Pose.Pose.Orientation.Z /
    hoffmansubsystem_B.delta1;

  /* Sum: '<S4>/Sum' incorporates:
   *  Fcn: '<S23>/fcn1'
   *  Fcn: '<S23>/fcn2'
   *  MATLAB Function: '<S4>/calculate e'
   *  Trigonometry: '<S23>/Trigonometric Function1'
   */
  rtb_Sum = rt_atan2d_snf((rtb_q0 * hoffmansubsystem_B.q3 + rtb_fcn5 *
    hoffmansubsystem_B.delta1) * 2.0, ((rtb_fcn5 * rtb_fcn5 + rtb_q0 * rtb_q0) -
    hoffmansubsystem_B.q3 * hoffmansubsystem_B.q3) - hoffmansubsystem_B.delta1 *
    hoffmansubsystem_B.delta1) - hoffmansubsystem_B.MultiportSwitch[602 +
    b_index];

  /* MATLAB Function: '<S4>/calculate delta' */
  hoffmansubsystem_B.delta1 = hoffmansubsystem_B.In1_k.Linear.X;
  rtb_fcn5 = rtb_Sum;

  /* MATLAB Function 'Hoffmann Controller1/calculate delta': '<S14>:1' */
  /* '<S14>:1:3' if( abs(v) < eps ) */
  if (fabs(hoffmansubsystem_B.In1_k.Linear.X) < 2.2204460492503131E-16) {
    /* '<S14>:1:4' v = eps; */
    hoffmansubsystem_B.delta1 = 2.2204460492503131E-16;
  }

  /*  if phi is greater than pi (or less than -pi), then  */
  /*  we normalize to between [-pi,pi] */
  /* '<S14>:1:9' if( phi < -pi ) */
  if (rtb_Sum < -3.1415926535897931) {
    /* '<S14>:1:10' phi = phi+2*pi; */
    rtb_fcn5 = rtb_Sum + 6.2831853071795862;
  } else {
    if (rtb_Sum > 3.1415926535897931) {
      /* '<S14>:1:11' elseif( phi > pi ) */
      /* '<S14>:1:12' phi = phi-2*pi; */
      rtb_fcn5 = rtb_Sum - 6.2831853071795862;
    }
  }

  /* BusAssignment: '<Root>/Bus Assignment1' incorporates:
   *  Constant: '<S1>/Constant'
   */
  /* '<S14>:1:15' delta = phi + atan2(k*e,v); */
  hoffmansubsystem_B.BusAssignment1 = hoffmansubsystem_P.Constant_Value_l;

  /* Switch: '<S4>/Switch' */
  if (rtb_e > hoffmansubsystem_P.Switch_Threshold) {
    /* BusAssignment: '<Root>/Bus Assignment1' incorporates:
     *  Constant: '<S4>/k1'
     */
    hoffmansubsystem_B.BusAssignment1.Linear.X = hoffmansubsystem_P.k1_Value;
  } else {
    /* BusAssignment: '<Root>/Bus Assignment1' */
    hoffmansubsystem_B.BusAssignment1.Linear.X =
      hoffmansubsystem_B.In1_k.Linear.X;
  }

  /* End of Switch: '<S4>/Switch' */

  /* BusAssignment: '<Root>/Bus Assignment1' incorporates:
   *  Constant: '<S4>/k'
   *  Gain: '<S4>/Gain'
   *  MATLAB Function: '<S4>/calculate delta'
   */
  hoffmansubsystem_B.BusAssignment1.Angular.Z = (rt_atan2d_snf
    (hoffmansubsystem_P.k_Value * rtb_e, hoffmansubsystem_B.delta1) + rtb_fcn5) *
    hoffmansubsystem_P.Gain_Gain;

  /* Outputs for Atomic SubSystem: '<Root>/Publish for follower vel' */
  /* Start for MATLABSystem: '<S5>/SinkBlock' incorporates:
   *  MATLABSystem: '<S5>/SinkBlock'
   */
  Pub_hoffmansubsystem_21.publish(&hoffmansubsystem_B.BusAssignment1);

  /* End of Outputs for SubSystem: '<Root>/Publish for follower vel' */

  /* Gain: '<S27>/1//2' incorporates:
   *  Constant: '<S11>/Constant'
   *  MATLAB Function: '<S4>/calculate e'
   */
  rtb_fcn5 = hoffmansubsystem_B.MultiportSwitch[602 + b_index] *
    hoffmansubsystem_P.u2_Gain;
  rtb_q0 = hoffmansubsystem_P.u2_Gain * hoffmansubsystem_P.Constant_Value_bw;
  rtb_sincos_o1_idx_2 = hoffmansubsystem_P.u2_Gain *
    hoffmansubsystem_P.Constant_Value_bw;

  /* Trigonometry: '<S27>/sincos' */
  hoffmansubsystem_B.q3 = cos(rtb_fcn5);
  rtb_fcn5 = sin(rtb_fcn5);
  rtb_sincos_o2_idx_1 = cos(rtb_q0);
  rtb_q0 = sin(rtb_q0);
  hoffmansubsystem_B.delta1 = cos(rtb_sincos_o1_idx_2);
  rtb_sincos_o1_idx_2 = sin(rtb_sincos_o1_idx_2);

  /* BusAssignment: '<Root>/Bus Assignment2' incorporates:
   *  Constant: '<S2>/Constant'
   *  Fcn: '<S27>/q0'
   *  Fcn: '<S27>/q1'
   *  Fcn: '<S27>/q2'
   *  Fcn: '<S27>/q3'
   *  MATLAB Function: '<S4>/calculate e'
   *  Trigonometry: '<S27>/sincos'
   */
  hoffmansubsystem_B.BusAssignment2 = hoffmansubsystem_P.Constant_Value_b;
  hoffmansubsystem_B.BusAssignment2.Pose.Position.X =
    hoffmansubsystem_B.MultiportSwitch[b_index];
  hoffmansubsystem_B.BusAssignment2.Pose.Position.Y =
    hoffmansubsystem_B.MultiportSwitch[301 + b_index];
  hoffmansubsystem_B.BusAssignment2.Pose.Orientation.X = hoffmansubsystem_B.q3 *
    rtb_sincos_o2_idx_1 * rtb_sincos_o1_idx_2 - rtb_fcn5 * rtb_q0 *
    hoffmansubsystem_B.delta1;
  hoffmansubsystem_B.BusAssignment2.Pose.Orientation.Y = hoffmansubsystem_B.q3 *
    rtb_q0 * hoffmansubsystem_B.delta1 + rtb_fcn5 * rtb_sincos_o2_idx_1 *
    rtb_sincos_o1_idx_2;
  hoffmansubsystem_B.BusAssignment2.Pose.Orientation.Z = rtb_fcn5 *
    rtb_sincos_o2_idx_1 * hoffmansubsystem_B.delta1 - hoffmansubsystem_B.q3 *
    rtb_q0 * rtb_sincos_o1_idx_2;
  hoffmansubsystem_B.BusAssignment2.Pose.Orientation.W = hoffmansubsystem_B.q3 *
    rtb_sincos_o2_idx_1 * hoffmansubsystem_B.delta1 + rtb_fcn5 * rtb_q0 *
    rtb_sincos_o1_idx_2;

  /* Outputs for Atomic SubSystem: '<Root>/Publish1' */
  /* Start for MATLABSystem: '<S6>/SinkBlock' incorporates:
   *  MATLABSystem: '<S6>/SinkBlock'
   */
  Pub_hoffmansubsystem_88.publish(&hoffmansubsystem_B.BusAssignment2);

  /* End of Outputs for SubSystem: '<Root>/Publish1' */
}

/* Model initialize function */
void hoffmansubsystem_initialize(void)
{
  /* Registration code */

  /* initialize non-finites */
  rt_InitInfAndNaN(sizeof(real_T));

  /* initialize error status */
  rtmSetErrorStatus(hoffmansubsystem_M, (NULL));

  /* block I/O */
  (void) memset(((void *) &hoffmansubsystem_B), 0,
                sizeof(B_hoffmansubsystem_T));

  /* states (dwork) */
  (void) memset((void *)&hoffmansubsystem_DW, 0,
                sizeof(DW_hoffmansubsystem_T));

  {
    static const char_T tmp[8] = { 'w', 'a', 'y', 'p', 'o', 'i', 'n', 't' };

    static const char_T tmp_0[7] = { 'c', 'm', 'd', '_', 'v', 'e', 'l' };

    static const char_T tmp_1[15] = { 'c', 'm', 'd', '_', 'c', 'o', 'n', 't',
      'r', 'o', 'l', '_', 'v', 'e', 'l' };

    char_T tmp_2[9];
    char_T tmp_3[8];
    char_T tmp_4[16];
    char_T tmp_5[5];
    int16_T i;

    /* Start for Atomic SubSystem: '<Root>/Subscribe3' */
    /* Start for MATLABSystem: '<S8>/SourceBlock' */
    hoffmansubsystem_DW.obj_i.isInitialized = 0L;
    hoffmansubsystem_DW.objisempty_c = true;
    hoffmansubsystem_DW.obj_i.isInitialized = 1L;
    tmp_5[0] = 'o';
    tmp_5[1] = 'd';
    tmp_5[2] = 'o';
    tmp_5[3] = 'm';
    tmp_5[4] = '\x00';
    Sub_hoffmansubsystem_102.createSubscriber(tmp_5,
      hoffmansubsyste_MessageQueueLen);

    /* End of Start for SubSystem: '<Root>/Subscribe3' */

    /* Start for Atomic SubSystem: '<Root>/Velocity from control block ' */
    /* Start for MATLABSystem: '<S9>/SourceBlock' */
    hoffmansubsystem_DW.obj_p.isInitialized = 0L;
    hoffmansubsystem_DW.objisempty = true;
    hoffmansubsystem_DW.obj_p.isInitialized = 1L;
    for (i = 0; i < 15; i++) {
      tmp_4[i] = tmp_1[i];
    }

    tmp_4[15] = '\x00';
    Sub_hoffmansubsystem_150.createSubscriber(tmp_4,
      hoffmansubsyste_MessageQueueLen);

    /* End of Start for MATLABSystem: '<S9>/SourceBlock' */
    /* End of Start for SubSystem: '<Root>/Velocity from control block ' */

    /* Start for Atomic SubSystem: '<Root>/Publish for follower vel' */
    /* Start for MATLABSystem: '<S5>/SinkBlock' */
    hoffmansubsystem_DW.obj_m.isInitialized = 0L;
    hoffmansubsystem_DW.objisempty_m = true;
    hoffmansubsystem_DW.obj_m.isInitialized = 1L;
    for (i = 0; i < 7; i++) {
      tmp_3[i] = tmp_0[i];
    }

    tmp_3[7] = '\x00';
    Pub_hoffmansubsystem_21.createPublisher(tmp_3,
      hoffmansubsyste_MessageQueueLen);

    /* End of Start for MATLABSystem: '<S5>/SinkBlock' */
    /* End of Start for SubSystem: '<Root>/Publish for follower vel' */

    /* Start for Atomic SubSystem: '<Root>/Publish1' */
    /* Start for MATLABSystem: '<S6>/SinkBlock' */
    hoffmansubsystem_DW.obj.isInitialized = 0L;
    hoffmansubsystem_DW.objisempty_h = true;
    hoffmansubsystem_DW.obj.isInitialized = 1L;
    for (i = 0; i < 8; i++) {
      tmp_2[i] = tmp[i];
    }

    tmp_2[8] = '\x00';
    Pub_hoffmansubsystem_88.createPublisher(tmp_2,
      hoffmansubsyste_MessageQueueLen);

    /* End of Start for MATLABSystem: '<S6>/SinkBlock' */
    /* End of Start for SubSystem: '<Root>/Publish1' */
  }

  /* SystemInitialize for Atomic SubSystem: '<Root>/Subscribe3' */
  /* SystemInitialize for Enabled SubSystem: '<S8>/Enabled Subsystem' */
  /* SystemInitialize for Outport: '<S21>/Out1' */
  hoffmansubsystem_B.In1 = hoffmansubsystem_P.Out1_Y0;

  /* End of SystemInitialize for SubSystem: '<S8>/Enabled Subsystem' */
  /* End of SystemInitialize for SubSystem: '<Root>/Subscribe3' */

  /* SystemInitialize for Atomic SubSystem: '<Root>/Velocity from control block ' */
  /* SystemInitialize for Enabled SubSystem: '<S9>/Enabled Subsystem' */
  /* SystemInitialize for Outport: '<S22>/Out1' */
  hoffmansubsystem_B.In1_k = hoffmansubsystem_P.Out1_Y0_n;

  /* End of SystemInitialize for SubSystem: '<S9>/Enabled Subsystem' */
  /* End of SystemInitialize for SubSystem: '<Root>/Velocity from control block ' */
}

/* Model terminate function */
void hoffmansubsystem_terminate(void)
{
  /* Terminate for Atomic SubSystem: '<Root>/Subscribe3' */
  /* Start for MATLABSystem: '<S8>/SourceBlock' incorporates:
   *  Terminate for MATLABSystem: '<S8>/SourceBlock'
   */
  if (hoffmansubsystem_DW.obj_i.isInitialized == 1L) {
    hoffmansubsystem_DW.obj_i.isInitialized = 2L;
  }

  /* End of Start for MATLABSystem: '<S8>/SourceBlock' */
  /* End of Terminate for SubSystem: '<Root>/Subscribe3' */

  /* Terminate for Atomic SubSystem: '<Root>/Velocity from control block ' */
  /* Start for MATLABSystem: '<S9>/SourceBlock' incorporates:
   *  Terminate for MATLABSystem: '<S9>/SourceBlock'
   */
  if (hoffmansubsystem_DW.obj_p.isInitialized == 1L) {
    hoffmansubsystem_DW.obj_p.isInitialized = 2L;
  }

  /* End of Start for MATLABSystem: '<S9>/SourceBlock' */
  /* End of Terminate for SubSystem: '<Root>/Velocity from control block ' */

  /* Terminate for Atomic SubSystem: '<Root>/Publish for follower vel' */
  /* Start for MATLABSystem: '<S5>/SinkBlock' incorporates:
   *  Terminate for MATLABSystem: '<S5>/SinkBlock'
   */
  if (hoffmansubsystem_DW.obj_m.isInitialized == 1L) {
    hoffmansubsystem_DW.obj_m.isInitialized = 2L;
  }

  /* End of Start for MATLABSystem: '<S5>/SinkBlock' */
  /* End of Terminate for SubSystem: '<Root>/Publish for follower vel' */

  /* Terminate for Atomic SubSystem: '<Root>/Publish1' */
  /* Start for MATLABSystem: '<S6>/SinkBlock' incorporates:
   *  Terminate for MATLABSystem: '<S6>/SinkBlock'
   */
  if (hoffmansubsystem_DW.obj.isInitialized == 1L) {
    hoffmansubsystem_DW.obj.isInitialized = 2L;
  }

  /* End of Start for MATLABSystem: '<S6>/SinkBlock' */
  /* End of Terminate for SubSystem: '<Root>/Publish1' */
}
